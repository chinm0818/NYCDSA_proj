group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., first(Agency))
head(q32)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., first(Agency), first(SalRangeFrom))
head(q32)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., first(SalRangeFrom))
head(q32)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., first(SalRangeFrom)) %>%
arrange(., desc(SalRangeFrom))
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., TopSal)
head(q32)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
colnames(jobs)
head(jobs$Posting.Type)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
colnames(jobs)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
colnames(jobs)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
#q31 = jobs %>%
#group_by(., Agency) %>%
#select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
dim(q31)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
#q31 = jobs %>%
#group_by(., Agency) %>%
#select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
colnames(jobs)
install.packages("addinslist")
library(addinslist)
addinslist:::addinslistAddin()
shiny::runApp('NYCDSA/NYC-Crime-Data')
runApp('NYCDSA/NYC-Crime-Data')
runApp('NYCDSA/MichaelChinShinyProj/Nyc_Oil')
runApp('NYCDSA/MichaelChinShinyProj/Nyc_Oil')
runApp('NYCDSA/MichaelChinShinyProj/Nyc_Oil')
runApp('NYCDSA/proj/NYCDSA_proj/projects/Nyc_Oil')
?addMarkers
oil2 = read.csv('clean_oil.csv')
setwd("~/NYCDSA/proj/NYCDSA_proj/projects/Nyc_Oil")
oil2 = read.csv('clean_oil.csv')
View(oil2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addCircles
runApp()
runApp()
runApp()
?leafletOutput
runApp()
runApp()
runApp()
runApp()
?renderLeaflet
?leaflet
?setView
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addTiles
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?leafletOutput
?htmlOutput
runApp()
runApp()
install.packages("mapview")
?popupGraph
library(mapview)
?popupGraph
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
