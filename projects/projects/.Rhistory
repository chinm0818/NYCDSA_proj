q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions))
#mutate(., min_expenses = open_jobs * SalRangeFrom, max_expenses = open_jobs * SalRangeTo)
head(q35)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level, X..Of.Positions)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
#head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions))
mutate(., min_expenses = open_jobs * SalRangeFrom, max_expenses = open_jobs * SalRangeTo)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level, X..Of.Positions)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
#head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions)) %>%
mutate(., min_expenses = open_jobs * SalRangeFrom, max_expenses = open_jobs * SalRangeTo)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level, X..Of.Positions)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
#head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions), avgSalFrom = mean(SalRangeFrom), avgSalTo = mean(SalRangeTo)) %>%
mutate(., min_expenses = open_jobs * avgSalFrom, max_expenses = open_jobs * avgSalto)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level, X..Of.Positions)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
#head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions), avgSalFrom = mean(SalRangeFrom), avgSalTo = mean(SalRangeTo)) %>%
mutate(., min_expenses = open_jobs * avgSalFrom, max_expenses = open_jobs * avgSalTo)
head(q35)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level, X..Of.Positions)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
#head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions), avgSalFrom = mean(SalRangeFrom), avgSalTo = mean(SalRangeTo)) %>%
mutate(., min_expenses = open_jobs * avgSalFrom, max_expenses = open_jobs * avgSalTo)
head(q35)
#6. What `Civil.Service.Title` has the largest posted salary range?
q36 = q31t %>%
mutate(., salRange = SalRangeTo - SalRangeFrom) %>%
arrange(., desc(salRange)) %>%
summarise(., first(salRange))
head(q36)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
#group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level, X..Of.Positions)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
#head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions), avgSalFrom = mean(SalRangeFrom), avgSalTo = mean(SalRangeTo)) %>%
mutate(., min_expenses = open_jobs * avgSalFrom, max_expenses = open_jobs * avgSalTo)
head(q35)
#6. What `Civil.Service.Title` has the largest posted salary range?
q36 = q31t %>%
mutate(., salRange = SalRangeTo - SalRangeFrom) %>%
arrange(., desc(salRange)) %>%
summarise(., first(salRange))
head(q36)
jobs = read.csv('NYC_Jobs.csv', stringsAsFactors = FALSE)
q31 = jobs %>%
#group_by(., Agency) %>%
select(., Agency, Civil.Service.Title, Salary.Frequency, Salary.Range.From, Salary.Range.To, Posting.Type, Level, X..Of.Positions)
#Salary.Range.From is a str converting to dbl
q31 = mutate(q31, Salary.Range.From = as.numeric(Salary.Range.From))
#head(q31)
#splitting into 3 df by salary freq
q31h = filter(q31, Salary.Frequency == 'Hourly')
#head((q31h))
q31a = filter(q31, Salary.Frequency == 'Annual')
q31d = filter(q31, Salary.Frequency == 'Daily')
#adding appropriate format for hourly and daily data
q31h = mutate(q31h, SalRangeFrom = Salary.Range.From * 1920, SalRangeTo = Salary.Range.To * 8*5*4*12)
q31d = mutate(q31d, SalRangeFrom = Salary.Range.From * 5*4*12, SalRangeTo = Salary.Range.To *5*4*12)
q31a = mutate(q31a, SalRangeFrom = Salary.Range.From, SalRangeTo = Salary.Range.To)
#head(q31h)
#head(q31d)
#head(q31a)
#combine back together
q31t = rbind(q31h, q31d, q31a)
dim(q31t) # apparently we lost a serveral data points in the conversion and merge. eh
head(q31t)
q31ans = q31t %>%
group_by(., Agency) %>%
summarise(., meanSalfrom = mean(SalRangeFrom), medianSalfrom = median(SalRangeFrom), meanSalto = mean(SalRangeTo), medianSalto = median(SalRangeTo))
head(q31ans)
#2. Each job(agency) is given a salary range (`Salary.Range.From` and `Salary.Range.To`). Which company(agency) has the highest average lower end salary (`Salary.Range.From`)?
q32 = q31t %>%
group_by(., Agency, Civil.Service.Title) %>%
arrange(., desc(SalRangeFrom)) %>%
summarise(., TopSal = first(SalRangeFrom)) %>%
arrange(., desc(TopSal))
head(q32)
#3. Does the type of posting ("internal" or "external") have a big impact on the average salary range? In this case, range is defined as the difference between the high and the low salary for any given job posting.
q33 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Posting.Type) %>%
summarise(., mean(SalRange))
head(q33)
#4. Rank the `level`s by their average salary range in descending order
q34 = q31t %>%
mutate(., SalRange = SalRangeTo - SalRangeFrom) %>%
group_by(., Level) %>%
summarize(., avgSal = mean(SalRange)) %>%
arrange(., desc(avgSal))
head(q34)
#5. Suppose each agency filled all open positions. Find the range of expenses to pay the salaries of all new hires (label the lower end `min_expenses` and the upper end `max_expenses`). *Hint: Note that each posting lists how many positions are available*.
q35 = q31t %>%
group_by(., Agency) %>%
summarise(., open_jobs = sum(X..Of.Positions), avgSalFrom = mean(SalRangeFrom), avgSalTo = mean(SalRangeTo)) %>%
mutate(., min_expenses = open_jobs * avgSalFrom, max_expenses = open_jobs * avgSalTo)
head(q35)
#6. What `Civil.Service.Title` has the largest posted salary range?
q36 = q31t %>%
mutate(., salRange = SalRangeTo - SalRangeFrom) %>%
arrange(., desc(salRange)) %>%
summarise(., first(salRange), first(Civil.Service.Title))
head(q36)
counties = readOGR(path.expand("~/NYCDSA/Projects/Borough Boundaries/nycbb.shp"), layer = "nycbb")
setwd("~/NYCDSA/Projects")
counties = readOGR(path.expand("~/NYCDSA/Projects/Borough Boundaries/nycbb.shp"), layer = "nycbb")
source('~/NYCDSA/Projects/NycOil.R')
counties = readOGR("nycbb.shp", layer = "nycbb")
NY_county = subset(counties, region == "new york")
nyc_base = ggplot() = geom_polygon(data = counties, aes(x=long, y=lat, group = group))
nyc_base = ggplot() + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
nyc_base
ggThemeAssist:::ggThemeAssistAddin()
oil_map + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
oil_map
oil_map + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
ggThemeAssist:::ggThemeAssistAddin()
oil_map = ggplot(data = oil, aes(x = Longitude, y = Latitude)) + geom_point(aes(color = 'red')) + theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"))
oil_map
nyc_base = geom_polygon(data = counties, aes(x=long, y=lat, group = group)) + theme(panel.background = element_rect(fill = NA))
oil_map + nyc_base
oil_map + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
+ theme(panel.background = element_rect(fill = NA))
nyc_base + oil_map
nyc_base = ggplot(data = oil, aes(x = Longitude, y = Latitude)) + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
+ theme(panel.background = element_rect(fill = NA))
nyc_base = ggplot(data = oil, aes(x = Longitude, y = Latitude)) + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
+ theme(panel.background = element_rect(fill = NA))
nyc_base = ggplot() + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
+ theme(panel.background = element_rect(fill = NA))
oil_map = ggplot() + geom_point(data = oil, aes(x = Longitude, y = Latitude, color = 'red')) + theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"))
oil_map
combined_map = ggplot()
+ geom_point(data = oil, aes(x = Longitude, y = Latitude, color = 'red'))
+ geom_polygon(data = counties, aes(x=long, y=lat, group = group))
combined_map = ggplot() + geom_point(data = oil, aes(x = Longitude, y = Latitude, color = 'red')) + geom_polygon(data = counties, aes(x=long, y=lat, group = group))
combined_map = ggplot() +
geom_point(data = oil, aes(x = Longitude, y = Latitude, color = 'red')) +
geom_polygon(data = counties, aes(x=long, y=lat, group = group))
combined_map
combined_map = ggplot() +
geom_polygon(data = counties, aes(x=long, y=lat, group = group)) +
geom_point(data = oil, aes(x = Longitude, y = Latitude, color = 'red'))
combined_map
colnames(oil)
View(oil)
na_count = oil %>%
group_by(., Borough) %>%
summarise(., is.na(Latitude))
na_count = oil %>%
group_by(., Borough) %>%
#messing with plotting spatial data
oil_map = ggplot() + geom_point(data = oil, aes(x = Longitude, y = Latitude, color = 'red')) + theme(panel.grid.major = element_line(linetype = "blank"),
panel.grid.minor = element_line(linetype = "blank"))
na_count = oil %>%
group_by(., Borough)
na_count
na_count = oil %>%
group_by(., Borough) %>%
summarise(., sum(is.na(Latitude)))
na_count
na_count = oil %>%
group_by(., Borough) %>%
summarise(., count_na = sum(is.na(Latitude)), counts = n(Borough))
?n
na_count = oil %>%
group_by(., Borough) %>%
summarise(., count_na = sum(is.na(Latitude)), counts = n())
na_count
na_count = oil %>%
group_by(., Borough) %>%
summarise(., count_na = sum(is.na(Latitude)), counts = n()) %>%
mutate(., perc_missing = count_na/counts * 100)
na_count
oil2 = oil %>%
/
oil2 = oil %>%
filter(., is.na(Latitude) == 'True')
View(oil2)
oil2 = oil %>%
filter(., is.na(Latitude))
View(oil2)
oil2 = oil %>%
filter(., is.not.na(Latitude))
oil2 = oil %>%
filter(., !is.na(Latitude))
View(oil2)
unique(oil2$Age.range.of.boiler)
